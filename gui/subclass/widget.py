
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'try.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.




from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QFileInfo
import os
import fnmatch, shutil




class Ui_Dialog(object):

    def setupUi(self, Dialog, genomeName):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 300)
        self.AutomaticButton = QtWidgets.QPushButton(Dialog)
        self.AutomaticButton.setGeometry(QtCore.QRect(100, 110, 161, 31))
        self.AutomaticButton.setObjectName("AutomaticButton")
        self.AutomaticButton.clicked.connect(self.Automatic)
        self.ManualButton = QtWidgets.QPushButton(Dialog, clicked= self.manual)
        self.ManualButton.setGeometry(QtCore.QRect(100, 210, 161, 31))
        self.ManualButton.setObjectName("ManualButton")
        self.ManualButton.clicked.connect(self.manual)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(50, 50, 301, 31))
        self.label.setObjectName("label")
        self.Uploadfastq = QtWidgets.QPushButton(Dialog)
        self.Uploadfastq.setGeometry(QtCore.QRect(100, 160, 161, 31))
        self.Uploadfastq.setObjectName("Uploadfastq")
        self.Uploadfastq.clicked.connect(self.fastq)


        self.retranslateUi(Dialog,genomeName)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog, genomeName):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.AutomaticButton.setText(_translate("Dialog", "Upload Database dir"))
        self.ManualButton.setText(_translate("Dialog", "Manual Upload"))
        self.label.setText(_translate("Dialog", "Upload r1.fastq, r2.fastq, .gtf and .fna files "))
        self.Uploadfastq.setText(_translate("Dialog", "Upload fastq dir"))


    def Automatic(self):#checked1
        folderpath = QtWidgets.QFileDialog.getExistingDirectory(None, caption='Choose Directory', directory=os.getcwd())
        print(folderpath)
        
        gtffile = []
        fnafile = []
        for root, dirnames, filenames in os.walk(folderpath):
            for filename in fnmatch.filter(filenames,'*.gtf'):
                
                gtf = os.path.join(folderpath, filename)
                gtffile.append(gtf)
            for fna in fnmatch.filter(filenames,'*.fna'):
                
                file = os.path.join(folderpath, fna)
                fnafile.append(file)
        print(gtffile)
        print(fnafile)
        
    def fastq(self):
        fastqfolder = QtWidgets.QFileDialog.getExistingDirectory(None, caption='Choose Directory', directory=os.getcwd())
        path = "/home/mac/Documents/Garima/Test_prot/Prot_test/Database/"
        r1file = []
        r2file = []
        dirname = os.listdir(path)
        filename = os.listdir(fastqfolder)
        for name in dirname:
            for file in filename:
                if name in file:
                    folder = "FastQ"                
                    tmppath = os.path.join(path, name, folder)
                    filepath = os.path.join(fastqfolder, file)
                    if ('R2' in file) or ('r2' in file):
                        r2file.append(filepath)
                    else:
                        r1file.append(filepath)

                    #shutil.copy(filepath, tmppath)
                    if os.path.isdir(tmppath):
                        shutil.copy(filepath, tmppath)
                    else:
                        os.mkdir(tmppath)
        
        print(r1file)
        print(r2file)     
        
    def manual(self,Dialog):
        from RNAtorDialog import getRNAtorInformation
        self.manual = getRNAtorInformation(Dialog, genomeName="ABC")
        
'''     
def getInfo():
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.exec_()
'''     
            
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog, genomeName = "ABC")
    Dialog.show()
    sys.exit(app.exec_())
