# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'prokka_upload.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from pickletools import genops
from PyQt5 import QtCore, QtGui, QtWidgets
import os


class Ui_GenomeUpload(object):
    def setupUi(self, GenomeUpload):
        GenomeUpload.setObjectName("GenomeUpload")
        GenomeUpload.resize(400, 300)
        self.buttonBox = QtWidgets.QDialogButtonBox(GenomeUpload)
        self.buttonBox.setGeometry(QtCore.QRect(30, 240, 341, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.GenomePath = QtWidgets.QLineEdit(GenomeUpload)
        self.GenomePath.setGeometry(QtCore.QRect(30, 100, 261, 21))
        self.GenomePath.setObjectName("GenomePath")
        self.UploadGenome = QtWidgets.QPushButton(GenomeUpload)
        self.UploadGenome.setGeometry(QtCore.QRect(290, 100, 100, 21))
        self.UploadGenome.setObjectName("UploadGenome")
        self.UploadGenome.clicked.connect(self.uploadgenomefolder)

        self.retranslateUi(GenomeUpload)
        self.buttonBox.accepted.connect(GenomeUpload.accept) # type: ignore
        self.buttonBox.rejected.connect(GenomeUpload.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(GenomeUpload)

    def retranslateUi(self, GenomeUpload):
        _translate = QtCore.QCoreApplication.translate
        GenomeUpload.setWindowTitle(_translate("GenomeUpload", "Upload Genome"))
        self.UploadGenome.setText(_translate("GenomeUpload", "Upload folder"))

    def uploadgenomefolder(self):
        genomeFolderPath = QtWidgets.QFileDialog.getExistingDirectory(None, "Genome path", directory=os.getcwd())
        self.GenomePath.setText(genomeFolderPath)


    def getgenpath(self):
        
        tmppath = self.GenomePath.text()
        return tmppath

    
def uploadgenome():
    Data = QtWidgets.QDialog()
    ui = Ui_GenomeUpload()
    ui.setupUi(Data)
    if Data.exec_():
        return ui.getgenpath()
    else:
        return ()
    
'''

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    GenomeUpload = QtWidgets.QDialog()
    ui = Ui_GenomeUpload()
    ui.setupUi(GenomeUpload)
    GenomeUpload.show()
    sys.exit(app.exec_())
'''